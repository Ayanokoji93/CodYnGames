package Compiler;

import java.io.*;
import java.util.List;
import java.util.Scanner;
import Compiler.factor.GeneralCompiler;

/**
 * The JavaFile class extends GeneralCompiler and provides methods to rename files,
 * write code to a file, compile, and execute Java code.
 */
public class JavaFile extends GeneralCompiler {
    private String fileName;

    /**
     *Constructor that initializes a temporary file with the ".java" extension.
     *
     * @throws IOException if an I/O error occurs.
     */
    public JavaFile() throws IOException {
        super(".java");
    }

    /**
     * Renames the temporary file using the specified fileName.
     */
    public void renameFile() {
        File newFileName = new File(tempFile.getParent(), fileName + ".java");
        tempFile.renameTo(newFileName);
        this.tempFile = newFileName;
    }

    /**
     * Compiles and executes the provided Java code, passing a list of numbers as input.
     *
     * @param code    the Java code to execute.
     * @param numbers the list of numbers to pass as input to the program.
     * @return the output of the executed program.
     * @throws IOException          if an I/O error occurs.
     * @throws InterruptedException if the process execution is interrupted.
     */
    @Override
    public String execute(String code, List<Integer> numbers) throws IOException, InterruptedException {
        // Rename the temporary file
        renameFile();

        // Write the code to the temporary file
        writeResponseInFile(code);

        // Compile the code using javac
        Process compilerProcess = Runtime.getRuntime().exec("javac " + getPathFile());
        compilerProcess.waitFor();

        // Execute the compiled code using java
        Process execProcess = Runtime.getRuntime().exec("java " + getPathFile());

        // Provide input numbers to the executed program
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(execProcess.getOutputStream()));
        for (Integer number : numbers) {
            writer.write(number.toString());
            writer.newLine();
        }
        writer.close();

        // Capture the output generated by the executed program
        StringBuilder output = new StringBuilder();
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(execProcess.getInputStream()))) {
            String line;
            while ((line = reader.readLine()) != null) {
                output.append(line).append(System.lineSeparator());
            }
        }

        // Wait for the execution process to finish
        execProcess.waitFor();

        // Delete the temporary file
        deleteTempFile();

        // Return the output generated by executing the code
        return output.toString();
    }
}